name: "Tests"
on: [push, pull_request]

jobs:
  misspell:
    name: misspell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          reporter: github-pr-review
          github_token: ${{ secrets.github_token }}
          level: warning
          locale: "US"

  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          path: "."
          pattern: "*.sh"
          exclude: "./.git/*"

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 flake8_nb tests

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge
      - name: Install dependencies
        run: |
          conda install -y pandoc
          pip install -U -q -r requirements_dev.txt
      - name: Show installed dependencies
        run: |
          pip freeze
          pandoc -v
      - name: Build docs
        run: make --directory=docs clean_all html

  docs-link:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge
      - name: Install dependencies
        run: |
          conda install -y pandoc
          pip install -U -q -r requirements_dev.txt
      - name: Show installed dependencies
        continue-on-error: true
        run: |
          pip freeze
          pandoc -v
      - name: Build docs
        run: make --directory=docs clean_all linkcheck

  flake8-nightly:
    runs-on: ubuntu-latest
    needs: [flake8, docs]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        env:
          TOX_ENV_NAME: flake8-nightly
        run: |
          python -m pip install -U pip
          python -m pip install -U -r requirements_dev.txt
          python -m pip install -U -q git+https://gitlab.com/pycqa/flake8.git
      - name: Run tests
        run: |
          py.test -vv --cov=./ --cov-report term --cov-report xml --cov-config .coveragerc tests
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          name: flake8-nightly

  flake8-legacy:
    runs-on: ubuntu-latest
    needs: [flake8, docs]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U -r requirements_dev.txt
          python -m pip install -U -q 'flake8==3.7.0'
      - name: Run tests
        run: |
          py.test -vv --cov=./ --cov-report term --cov-report xml --cov-config .coveragerc tests
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          name: flake8-legacy

  test:
    runs-on: ${{ matrix.os }}
    needs: [flake8, docs]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies python == 3.6
        if: ${{ matrix.python-version == 3.6 }}
        run: |
          python -m pip install -U pip
          python -m pip install -U -c constraints-py36.txt -r requirements_dev.txt
      - name: Install dependencies python > 3.6
        if: ${{ matrix.python-version != 3.6 }}
        run: |
          python -m pip install -U pip
          python -m pip install -U -r requirements_dev.txt
      - name: Run tests
        run: |
          py.test --cov=./ --cov-report term --cov-report xml --cov-config .coveragerc tests
      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          name: ${{ matrix.os }}-py${{ matrix.python-version }}

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [test, flake8-nightly]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -U -r requirements_dev.txt
          pip install -U .
      - name: Build dist
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
